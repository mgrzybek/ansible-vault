---

- name: Pre-Install | Check Openstack credentials
  when:
  - vault_token_store_swift | lower == 'true'
  - vault_keys_store_swift | lower == 'true'
  assert:
    fail_msg: Openstack credencials must be present
    that:
    - lookup('env', 'OS_USERNAME') is defined
    - lookup('env', 'OS_PASSWORD') is defined
    - lookup('env', 'OS_AUTH_URL') is defined
    - lookup('env', 'OS_PROJECT_ID') is defined
    - lookup('env', 'OS_USER_DOMAIN_NAME') is defined

- name: Pre-Install | Check token storage
  assert:
    fail_msg: vault_token_store_consul_kv and vault_token_store_swift are exclusive
    that:
    - vault_token_store_consul_kv | lower != vault_token_store_swift | lower
 
- name: Pre-Install | Check keys storage
  assert:
    fail_msg: vault_keys_store_consul_kv and vault_keys_store_swift are exclusive
    that:
    - vault_keys_store_consul_kv | lower != vault_keys_store_swift | lower

- name: Pre-Install | Check firewalld
  shell: systemctl is-active firewalld.service
  when: ansible_system | lower == "linux"
  register: firewalld_service
  changed_when: false

- name: Pre-Install | Set local facts
  set_fact:
    use_consul: false
    use_firewalld: false
    install_vault: false
    configure_consul_vault_ui: false
    vault_addr: "http{% if vault_tls_disable != 1 %}s{% endif %}://{{ vault_tcp_listener }}"

- name: Pre-Install | Set local facts (home)
  when: ansible_env.HOME is undefined
  set_fact:
    vault_env_root_path: /root

- name: Pre-Install | Set local facts (home)
  when: ansible_env.HOME is defined
  set_fact:
    vault_env_root_path: "{{ ansible_env.HOME }}"

- name: Pre-Install | Set firewall facts
  when:
  - ansible_system | lower == "linux"
  - firewalld_service is success
  set_fact:
    use_firewalld: true

- name: Pre-Install | Check if consul is running
  command: consul status
  register: consul_service
  changed_when: false
  fail_when: false

- name: Pre-Install | Set local facts
  when: consul_service is success
  set_fact:
    use_consul: true
    configure_consul_vault_ui: true

#- name: Pre-Install | Check telegraf
#  when:
#  - ansible_system | lower == "linux"
#  command: systemctl is-active telegraf
#  register: telegraf_service
#  changed_when: false
#  fail_when: false
