---

- name: Pre-Install | Check Openstack credentials
  fail: msg="Openstack credencials must be present"
  when: (lookup('env', 'OS_USERNAME') is undefined
    or lookup('env', 'OS_PASSWORD') is undefined
    or lookup('env', 'OS_AUTH_URL') is undefined
    or lookup('env', 'OS_PROJECT_ID') is undefined
    or lookup('env', 'OS_USER_DOMAIN_NAME') is undefined)
    and (vault_token_store_swift | lower == 'true'
    or vault_keys_store_swift | lower == 'true')

- name: Pre-Install | Check token storage
  fail: msg="vault_token_store_consul_kv and vault_token_store_swift are exclusive"
  when:
    - vault_token_store_consul_kv | lower == 'true'
    - vault_token_store_swift | lower == 'true'
 
- name: Pre-Install | Check keys storage
  fail: msg="vault_keys_store_consul_kv and vault_keys_store_swift are exclusive"
  when:
    - vault_keys_store_consul_kv | lower == 'true'
    - vault_keys_store_swift | lower == 'true'

- name: Pre-Install | Check firewalld
  shell: systemctl is-active firewalld.service 2>/dev/null || echo ko && exit 0
  register: firewalld_service

- name: Pre-Install | Set local facts
  set_fact:
    use_consul: false
    use_firewalld: false
    install_vault: false
    configure_consul_vault_ui: false
    vault_addr: "http{% if vault_tls_disable != 1 %}s{% endif %}://{{ vault_tcp_listener }}"

- name: Pre-Install | Set local facts (home)
  when: ansible_env.HOME is undefined
  set_fact:
    vault_env_root_path: /root

- name: Pre-Install | Set local facts (home)
  when: ansible_env.HOME is defined
  set_fact:
    vault_env_root_path: "{{ ansible_env.HOME }}"

- name: Pre-Install | Set firewall facts
  when: firewalld_service.stdout.find('active') > -1
  set_fact:
    use_firewalld: true

- name: Pre-Install | Check if consul is running
  shell: systemctl is-active consul 2>/dev/null || echo ko && exit 0
  register: consul_service

- name: Pre-Install | Set local facts
  fact:
    use_consul: true
    configure_consul_vault_ui: true

#- name: Pre-Install | Check telegraf
#  shell: systemctl is-active telegraf 2>/dev/null || echo ko && exit 0
#  register: telegraf_service
